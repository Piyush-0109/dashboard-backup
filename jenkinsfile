def slack_channel = 'dashboard-backup-alert'

def attachments = [
  [
    text: 'Dashboard Backup Success !!!',
    color: '#ff0000'
  ]
]

pipeline {
    agent any
    triggers {
        cron('0 22 * * *')
    }

    stages {
        stage('Installing Requirements') {
            steps {
                sh '''
                pip install -r requirement.txt
                '''
            }
        }
        stage('Running Backup') {
            steps {
                sh '''
                python3 dashboard_backup.py ${DATADOG_API_KEY} ${DATADOG_APP_KEY} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} ${S3_BUCKET_NAME}
                '''
            }
        }
    }

    post {
    success{
        sendNotifications currentBuild.result, "Job: '${env.JOB_NAME}',VERSION: 'commit-${commit}-build-${env.BUILD_NUMBER}'", slack_channel
        archiveArtifacts artifacts: 'tfplan.txt'
    }
    unsuccessful{
        sendNotifications currentBuild.result, "Job: '${env.JOB_NAME}',VERSION: 'commit-${commit}-build-${env.BUILD_NUMBER}'", slack_channel
        archiveArtifacts artifacts: 'tfplan.txt'
    }
  }
}
